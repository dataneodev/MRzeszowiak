<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="MRzeszowiak.View.PreviewPage"
             xmlns:CarouselView="clr-namespace:CarouselView.FormsPlugin.Abstractions;assembly=CarouselView.FormsPlugin.Abstractions"
             xmlns:ViewModel="clr-namespace:MRzeszowiak.ViewModel"
             xmlns:Extends="clr-namespace:MRzeszowiak.Extends"
             xmlns:pmvvm="clr-namespace:Prism.Mvvm;assembly=Prism.Forms"
             pmvvm:ViewModelLocator.AutowireViewModel="True"
             Title="Podgląd ogłoszenia"
             x:Name="PreviewPageN">
    <ContentPage.Resources>
        <ResourceDictionary>
            <ViewModel:ImageFromFavorite x:Key="ImageFromFavorite" />
            <ViewModel:AbsHeight x:Key="AbsHeight" />
            <ViewModel:IsValueNotNull x:Key="PhoneImageVisible" />
            <ViewModel:IsTextNotNull x:Key="IsTextNotNull" />
            <ViewModel:NegativeBool x:Key="NegativeBool" />
            <ViewModel:MailStatusEnumToString x:Key="MailStatusEnumToString" />
            <ViewModel:MailStatusEnumNotSending x:Key="MailStatusEnumNotSending" />
            <ViewModel:DateTimeToString x:Key="DateTimeToString" />
            <ViewModel:IsCollectionNotEmpty x:Key="IsCollectionNotEmpty" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <ScrollView Orientation="Vertical" x:Name="PreviewPageScroll">
            <StackLayout Orientation="Vertical">
                <!--error section-->
                <ActivityIndicator VerticalOptions="CenterAndExpand" IsVisible="{Binding Activity}"  IsRunning="{Binding Activity}" IsEnabled="{Binding Activity}"/>
                <AbsoluteLayout IsVisible="False" IsEnabled="False"  HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                    <AbsoluteLayout.Triggers>
                        <MultiTrigger TargetType="AbsoluteLayout">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding ErrorMessage, Converter={StaticResource IsTextNotNull}}" Value="True"/>
                                <BindingCondition Binding="{Binding Activity}" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="IsVisible" Value="True"/>
                            <Setter Property="IsEnabled" Value="True"/>
                        </MultiTrigger>
                    </AbsoluteLayout.Triggers>
                    <Label Text="{Binding ErrorMessage}" FontSize="Medium" AbsoluteLayout.LayoutBounds="0.5,0.5,0.9,0.5"  AbsoluteLayout.LayoutFlags="All" HorizontalTextAlignment="Center"/>
                    <Button Text="Odśwież" Command="{Binding RefreshAdvert}" AbsoluteLayout.LayoutBounds="0.5,0.5" AbsoluteLayout.LayoutFlags="PositionProportional"/>
                </AbsoluteLayout>
                <!--end of serror section-->
                <!--image and back button section-->
                <AbsoluteLayout IsVisible="{Binding ViewActive}" IsEnabled="{Binding ViewActive}" HeightRequest="{Binding ImageVisible, Converter={StaticResource AbsHeight}}" HorizontalOptions="FillAndExpand" Padding="0" >
                    <CarouselView:CarouselViewControl ItemsSource="{Binding ImageURLsList}" IsVisible="{Binding ImageVisible}" IsEnabled="{Binding ImageVisible}"
                                       ShowArrows="True" ShowIndicators="True" IsSwipeEnabled="True" HorizontalOptions="FillAndExpand"
                                       AbsoluteLayout.LayoutBounds="0,0,1,220" AbsoluteLayout.LayoutFlags="WidthProportional" x:Name="CarouselViewImageList">
                        <CarouselView:CarouselViewControl.ItemTemplate>
                            <DataTemplate>
                                <Extends:ImageFit VerticalOptions="Center" HorizontalOptions="FillAndExpand" Aspect="AspectFill" x:Name="image">
                                    <Extends:ImageFit.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding Path=BindingContext.ImageTapped, Source={x:Reference Name=PreviewPageN}}" 
                                                          CommandParameter="{Binding Path=Position, Source={x:Reference Name=CarouselViewImageList}}" NumberOfTapsRequired="1" />
                                    </Extends:ImageFit.GestureRecognizers>
                                    <Extends:ImageFit.Source>
                                        <UriImageSource Uri="{Binding .}" CachingEnabled="True" CacheValidity="1"/>
                                    </Extends:ImageFit.Source>
                                </Extends:ImageFit>
                            </DataTemplate>
                        </CarouselView:CarouselViewControl.ItemTemplate>
                    </CarouselView:CarouselViewControl>
                    <Button Image="back.png" Text="" IsVisible="{Binding ViewActive}"  IsEnabled="{Binding ViewActive}" AbsoluteLayout.LayoutBounds="10,10,55,40" AbsoluteLayout.LayoutFlags="None"
                        BackgroundColor="#50e2e2e2" Command="{Binding BackButtonTapped}"/>
                </AbsoluteLayout>
                <!--end image and back button section-->
                <StackLayout Orientation="Vertical" IsVisible="{Binding ViewActive}" IsEnabled="{Binding ViewActive}" Margin="10,0,10,0" >
                    <Label Text="{Binding Title}" FontSize="Large" TextColor="Black" LineBreakMode="WordWrap"/>
                    <StackLayout Orientation="Horizontal" HorizontalOptions="FillAndExpand">
                        <!--highlihted-->
                        <Frame CornerRadius="10" Margin="0" Padding="4" IsVisible="{Binding Highlighted}" BackgroundColor="#fff268">
                            <Image Source="menu_favadvert.png" HeightRequest="20"/>
                        </Frame>
                        <!--price-->
                        <Label>
                            <Label.FormattedText>
                                <FormattedString>
                                    <FormattedString.Spans>
                                        <Span Text="Cena: " FontSize="Medium"/>
                                        <Span Text="{Binding Price, Mode=OneWay}" FontAttributes="Bold" FontSize="Large" TextColor="Black"/>
                                        <Span Text=" zł" FontAttributes="Bold" FontSize="Medium"/>
                                    </FormattedString.Spans>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                    </StackLayout>
                    <!--description-->
                    <Frame CornerRadius="10" Margin="0" Padding="0">
                        <Extends:SelectableLabel Text="{Binding DescriptionHTML}" IsSpellCheckEnabled="False" TextColor="Black" FontSize="Small"  Margin="8,5,8,5"/>
                    </Frame>
                    <!--Phone number-->
                    <Frame CornerRadius="10" Margin="0" Padding="0" IsVisible="{Binding HasPhoneImage}">
                        <StackLayout Orientation="Horizontal">
                            <Label Text="Telefon: " TextColor="Black" FontSize="Small" Margin="8,5,0,5"/>
                            <Image Source="{Binding PhoneImage}" IsVisible="{Binding PhoneImage, Converter={StaticResource PhoneImageVisible}}"
                                   HeightRequest="28" WidthRequest="224" Margin="-5,1,0,0" Aspect="AspectFit"/>
                        </StackLayout>
                    </Frame>
                    <!--Additional data list-->
                    <Frame CornerRadius="10" Margin="0" Padding="0" IsVisible="{Binding AdditionalData, Converter={StaticResource IsCollectionNotEmpty}}">
                        <ListView x:Name="AddDataList" Grid.Row="0" ItemsSource="{Binding AdditionalData}"
                                HasUnevenRows="True" RowHeight="26" HorizontalOptions="FillAndExpand" ItemTapped="AddDataList_ItemTapped"
                                ItemAppearing="AddDataList_ItemAppearing">
                            <ListView.Header>
                                <Label Text="Dane dodatkowe:" FontSize="10" Margin="8,0,8,0"/>
                            </ListView.Header>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <ViewCell>
                                        <StackLayout HorizontalOptions="FillAndExpand" Orientation="Horizontal" Margin="8,2,8,2" Padding="2">
                                            <Label Text="{Binding Key}" TextColor="Black"/>
                                            <Label Text="{Binding Value}" TextColor="Black"/>
                                        </StackLayout>
                                    </ViewCell>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Frame>
                    <!--Email-->
                    <Frame CornerRadius="12" Margin="0" Padding="0" x:Name="FrameMailForm">
                        <Frame.Triggers>
                            <DataTrigger TargetType="Frame" Binding="{Binding MailStatus}" Value="{x:Static ViewModel:MailStatusEnum.email_default}">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Frame" Binding="{Binding MailStatus}" Value="{x:Static ViewModel:MailStatusEnum.email_send}">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Frame" Binding="{Binding MailStatus}" Value="{x:Static ViewModel:MailStatusEnum.email_creating}">
                                <Setter Property="IsVisible" Value="True"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Frame" Binding="{Binding MailStatus}" Value="{x:Static ViewModel:MailStatusEnum.email_sending}">
                                <Setter Property="IsVisible" Value="True"/>
                            </DataTrigger>
                        </Frame.Triggers>
                        <StackLayout Orientation="Vertical">
                            <ActivityIndicator IsVisible="False" IsRunning="False"  Margin="0,10,0,0" HeightRequest="40">
                                <ActivityIndicator.Triggers>
                                    <DataTrigger TargetType="ActivityIndicator" Binding="{Binding MailStatus}" Value="{x:Static ViewModel:MailStatusEnum.email_sending}">
                                        <Setter Property="IsVisible" Value="True"/>
                                        <Setter Property="IsRunning" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="ActivityIndicator" Binding="{Binding MailStatus, Converter={StaticResource MailStatusEnumNotSending}}" Value="True">
                                        <Setter Property="IsVisible" Value="False"/>
                                        <Setter Property="IsRunning" Value="False"/>
                                    </DataTrigger>
                                </ActivityIndicator.Triggers>
                            </ActivityIndicator>
                            <StackLayout IsVisible="True" Orientation="Vertical" Margin="0" Padding="0" Spacing="0">
                                <StackLayout.Triggers>
                                    <DataTrigger TargetType="StackLayout" Binding="{Binding MailStatus}" Value="{x:Static ViewModel:MailStatusEnum.email_sending}">
                                        <Setter Property="IsVisible" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="StackLayout" Binding="{Binding MailStatus, Converter={StaticResource MailStatusEnumNotSending}}" Value="True">
                                        <Setter Property="IsVisible" Value="True"/>
                                    </DataTrigger>
                                </StackLayout.Triggers>
                                <Label Text="Twoja wiadomość:" FontSize="12" Margin="8,2,8,2"/>
                                <Label Text="{Binding LastSendMailDate, Converter={StaticResource DateTimeToString}, StringFormat='Wysłano już wiadomość dnia: {0}'}" FontSize="12" Margin="8,0,8,2" IsVisible="True">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding LastSendMailDate, Converter={StaticResource DateTimeToString}}" Value="">
                                            <Setter Property="IsVisible" Value="False"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                                <Frame BorderColor="#f4f4f4" CornerRadius="0" Padding="0" Margin="0,0,0,0">
                                    <Extends:CustomEditor Margin="0" x:Name="EmailMessageEntry"  Keyboard="Text" HeightRequest="140" HorizontalOptions="FillAndExpand">
                                        <Extends:CustomEditor.Triggers>
                                            <DataTrigger TargetType="Editor" Binding="{Binding MailStatus}" Value="{x:Static ViewModel:MailStatusEnum.email_default}">
                                                <Setter Property="Text" Value=""/>
                                            </DataTrigger>
                                        </Extends:CustomEditor.Triggers>
                                    </Extends:CustomEditor>
                                </Frame>
                            </StackLayout>
                            <Button Text="Wyślij wiadomość" Margin="8,0,8,8" Command="{Binding MailSendButtonTapped}" 
                            CommandParameter="{Binding Source={x:Reference EmailMessageEntry}, Path=Text}">
                                <Button.Triggers>
                                    <DataTrigger TargetType="Button" Binding="{Binding MailStatus}" Value="{x:Static ViewModel:MailStatusEnum.email_sending}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Button" Binding="{Binding MailStatus, Converter={StaticResource MailStatusEnumNotSending}}" Value="True">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Button.Triggers>
                            </Button>
                        </StackLayout>
                    </Frame>
                    <!--Button-->
                    <Frame CornerRadius="10" Margin="0" Padding="0">
                        <StackLayout Orientation="Horizontal" HorizontalOptions="FillAndExpand" Padding="4">
                            <Button HeightRequest="44" WidthRequest="78" Image="refresh.png" BackgroundColor="#f4f4f4" Command="{Binding RefreshAdvert}"/>
                            <Button HeightRequest="44" WidthRequest="78" Image="internet.png" BackgroundColor="#f4f4f4" Command="{Binding OpenAdvertPage}"/>
                            <Button HeightRequest="44" WidthRequest="78" Image="{Binding MailStatus, Converter={StaticResource MailStatusEnumToString}}" 
                                    BackgroundColor="#f4f4f4" x:Name="MailButton" Command="{Binding MailAdvert}"/>
                            <Button HeightRequest="44" WidthRequest="78" Image="{Binding IsFavorite, Converter={StaticResource ImageFromFavorite}}" 
                                    BackgroundColor="#f4f4f4" Command="{Binding FavoriteAdvert}"/>
                        </StackLayout>
                    </Frame>
                    <!--ID-->
                    <StackLayout Orientation="Horizontal" x:Name="EndStackLayout">
                        <Label HorizontalTextAlignment="Start" HorizontalOptions="FillAndExpand">
                            <Label.FormattedText>
                                <FormattedString>
                                    <FormattedString.Spans>
                                        <Span Text="ID: " FontSize="12"/>
                                        <Span Text="{Binding AdverIDinRzeszowiak, Mode=OneWay}"
                                      FontSize="12"/>
                                    </FormattedString.Spans>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label HorizontalTextAlignment="End" HorizontalOptions="FillAndExpand">
                            <Label.FormattedText>
                                <FormattedString>
                                    <FormattedString.Spans>
                                        <Span Text="Wyświetleń: "  FontSize="12"/>
                                        <Span Text="{Binding Views, Mode=OneWay}" TextColor="Black" FontSize="12"/>
                                    </FormattedString.Spans>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                    </StackLayout>
                </StackLayout>
            </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>