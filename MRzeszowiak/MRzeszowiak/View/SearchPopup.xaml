<?xml version="1.0" encoding="utf-8" ?>
<pages:PopupPage
        xmlns:pages="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
        xmlns="http://xamarin.com/schemas/2014/forms"
        xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
        x:Class="MRzeszowiak.View.SearchPopup"
        xmlns:pmvvm="clr-namespace:Prism.Mvvm;assembly=Prism.Forms"
        xmlns:b="clr-namespace:Prism.Behaviors;assembly=Prism.Forms"
        xmlns:ViewModel="clr-namespace:MRzeszowiak.ViewModel"
        pmvvm:ViewModelLocator.AutowireViewModel="True"
        x:Name="SearchPagePopup">
    <pages:PopupPage.Resources>
        <ResourceDictionary>
            <ViewModel:AddTypeToStringTranslate x:Key="AddTypeToStringTranslate" />
            <ViewModel:SortTypeToStringTranslate x:Key="SortTypeToStringTranslate" />
            <ViewModel:CategoryToString x:Key="CategoryToString" />
            <ViewModel:CategoryToActiveControls x:Key="CategoryToActiveControls" />
            <ViewModel:IntToEntryConverter x:Key="IntToEntryConverter" />
        </ResourceDictionary>
    </pages:PopupPage.Resources>
    <Grid Margin="20" 
          HorizontalOptions="Center"
          VerticalOptions="Center"
          Padding="0.5"
          RowSpacing="0.5"
          BackgroundColor="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <!--Row 1-->
        <Label Grid.Column="0" Grid.Row="0" Text="Szukaj:" TextColor="Black" VerticalOptions="Center" Margin="10,0,0,0" FontSize="Medium"/>
        <SearchBar Grid.Column="1" Grid.Row="0" x:Name="SearchBarPattern" Text="{Binding SearchPattern, Mode=TwoWay}" Margin="-20,0,0,0" Placeholder="Wyszukaj..."/>
        <!--Row 2-->
        <Label Grid.Column="0" Grid.Row="1" Text="Kategoria:" TextColor="Black" VerticalOptions="Center" Margin="10,10,0,10" FontSize="Medium"/>
        <Button Grid.Column="1" Grid.Row="1" Text="{Binding SelectedCategory, Converter={StaticResource CategoryToString}}" Command="{Binding ButtonCategorySelectTappped}"/>
        <!--Row 3-->
        <Label Grid.Column="0" Grid.Row="2" Text="Dodane :" TextColor="Black" VerticalOptions="Center" Margin="10,10,0,10" FontSize="Medium"/>
        <Picker Grid.Column="1" Grid.Row="2" ItemsSource="{Binding DateAddList}" SelectedItem="{Binding DateAdd}" 
                ItemDisplayBinding="{Binding ., Converter={StaticResource AddTypeToStringTranslate}}" IsEnabled="True" >
            <Picker.Behaviors>
                <b:EventToCommandBehavior EventName="SelectedIndexChanged" Command="{Binding AddTypeChange}" EventArgsParameterPath="SelectedItem"/>
            </Picker.Behaviors>
            <Picker.Triggers>
                <MultiTrigger TargetType="Picker">
                    <MultiTrigger.Conditions>
                        <BindingCondition Binding="{Binding Source={x:Reference SearchPagePopup}, Path=BindingContext.SelectedCategory, Converter={StaticResource CategoryToActiveControls}}" Value="False"/>
                        <BindingCondition Binding="{Binding Source={x:Reference SearchBarPattern}, Path=Text.Length}" Value="0"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="False"/>
                </MultiTrigger>
            </Picker.Triggers>
        </Picker>
        <!--Row 4-->
        <Label Grid.Column="0" Grid.Row="3" Text="Sortuj wg :" TextColor="Black" VerticalOptions="Center" Margin="10,10,0,10" FontSize="Medium"/>
        <Picker Grid.Column="1" Grid.Row="3" ItemsSource="{Binding SortList}" SelectedItem="{Binding Sort}"
                ItemDisplayBinding="{Binding ., Converter={StaticResource SortTypeToStringTranslate}}" 
                IsEnabled="{Binding Source={x:Reference SearchPagePopup}, Path=BindingContext.SelectedCategory, Converter={StaticResource CategoryToActiveControls}}">
            <Picker.Behaviors>
                <b:EventToCommandBehavior EventName="SelectedIndexChanged" Command="{Binding SortTypeChange}" EventArgsParameterPath="SelectedItem"/>
            </Picker.Behaviors>
        </Picker>
        <!--Row 5-->
        <Label Grid.Column="0" Grid.Row="4" Text="Cena:" TextColor="Black" VerticalOptions="Center" Margin="10,10,0,10" FontSize="Medium"/>
        <StackLayout Grid.Column="1" Grid.Row="4" VerticalOptions="Center" HorizontalOptions="FillAndExpand" Orientation="Horizontal">
            <Label Text="Min:" FontSize="Medium" TextColor="Black" VerticalOptions="Center"/>
            <Entry Text="{Binding PriceMin, Mode=TwoWay, Converter={StaticResource IntToEntryConverter}}" WidthRequest="60" Keyboard="Numeric" MaxLength="8"
                   IsEnabled="{Binding Source={x:Reference SearchPagePopup}, Path=BindingContext.SelectedCategory, Converter={StaticResource CategoryToActiveControls}}"/>
            <Label Text="Max:" FontSize="Medium" TextColor="Black" VerticalOptions="Center"/>
            <Entry Text="{Binding PriceMax, Mode=TwoWay, Converter={StaticResource IntToEntryConverter}}" WidthRequest="60" Keyboard="Numeric" MaxLength="8"
                   IsEnabled="{Binding Source={x:Reference SearchPagePopup}, Path=BindingContext.SelectedCategory, Converter={StaticResource CategoryToActiveControls}}"/>
        </StackLayout>
        <!--Row 6-->
        <Button  Grid.Column="0" Grid.Row="5" Text="Wyczyść"  Margin="5" Command="{Binding ButtonCancelTappped}">
            <Button.Triggers>
                <DataTrigger TargetType="Button" Binding="{Binding SettingMode}" Value="True">
                    <Setter Property="Text" Value="Domyślny"/>
                </DataTrigger>
            </Button.Triggers>
        </Button>
        <Button  Grid.Column="1" Grid.Row="5" Text="Wyszukaj" Margin="5" 
                 Command="{Binding ButtonSearchTappped}" HorizontalOptions="FillAndExpand">
            <Button.Triggers>
                <DataTrigger TargetType="Button" Binding="{Binding SettingMode}" Value="True">
                    <Setter Property="Text" Value="Zatwierdź"/>
                </DataTrigger>
            </Button.Triggers>
        </Button>
    </Grid>
</pages:PopupPage>